# ---------------------------
#
# Prepare distributions of this project
# and run a basic build-and-test from the
# tarball to make sure that actually works.
#
# Note: we don't test this on Windows because
#       ligo-segments doesn't install cleanly
#       from the PyPI tarball, we would need
#       to use conda.
#
# ---------------------------

name: Distribution

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tarball:
    name: Build

    runs-on: ubuntu-latest

    steps:
    - name: Get source code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install build requirements
      run: python -m pip install build setuptools wheel

    - name: Create distributions
      run: python -m build . --sdist --wheel --outdir .

    - uses: actions/upload-artifact@v2
      with:
        name: tarball
        path: gwpy-*.tar.*

    - uses: actions/upload-artifact@v2
      with:
        name: wheel
        path: gwpy*.whl

  distribution-test:
    name: Test Python ${{ matrix.python-version }} (${{ matrix.os }})

    needs:
      - tarball
    strategy:
      fail-fast: false
      matrix:
        os:
          - macOS
          - Ubuntu
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    runs-on: ${{ matrix.os }}-latest

    steps:
    - name: Download tarball
      uses: actions/download-artifact@v2
      with:
        name: tarball

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install GWpy
      run: python -m pip install gwpy-*.tar.*
      # need bash to resolve wildcards
      shell: bash

    - name: Install test requirements
      shell: bash
      run: |
        # extract requirements-test.txt from the tarball
        if [ "$(uname)" = "Darwin" ]; then
            tar -xf gwpy-*.tar.* --strip-components=1 */requirements-test.txt
        else
            tar -xf gwpy-*.tar.* --strip-components=1 --wildcards */requirements-test.txt
        fi
        # install the test requirements
        python -m pip install -r requirements-test.txt

    - name: Run test suite
      run: |
        python -m pytest \
            -ra \
            --color yes \
            --cov gwpy \
            --cov-report=xml \
            --disable-socket \
            --junitxml=pytest.xml \
            --pyargs gwpy \
        ;

    - name: Coverage report
      run: python -m coverage report --show-missing

    - name: Publish coverage to Codecov
      uses: codecov/codecov-action@v1.2.1
      with:
        files: coverage.xml
        flags: ${{ runner.os }},python${{ matrix.python-version }}

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: pytest-conda-${{ matrix.os }}-${{ matrix.python-version }}
        path: pytest.xml
