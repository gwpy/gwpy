name: Build and test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    # -----------------------
    # run a full build-and-test from the git repo,
    # including all optional dependencies
    # -----------------------
    name: Build and test

    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    runs-on: ${{ matrix.os }}

    # this is needed for conda environments to activate automatically
    defaults:
      run:
        shell: bash -el {0}

    steps:
    - name: Get source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Configure conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: test
        channels: conda-forge
        python-version: ${{ matrix.python-version }}

    - name: Conda info
      run: conda info --all

    - name: Install dependencies
      run: |
        # install python requirements from requirements-dev.txt file
        python ./ci/parse-conda-requirements.py requirements-dev.txt -o conda-reqs.txt
        conda install --quiet --yes --name test --file conda-requirements.txt
        # install extra conda-based requirements
        conda install --quiet --yes --name test
            "python-framel>=8.40.1" \
            "python-lal" \
            "python-lalframe" \
            "python-lalsimulation" \
            "python-ldas-tools-framecpp" \
            "python-nds2-client" \
        ;

    - name: Install GWpy
      run: python -m pip install . --no-build-isolation -vv

    - name: Package
      run: conda list --name test

    - name: Run test suite
      run: python -m pytest -ra --verbose --cov gwpy --pyargs gwpy --cov-report=xml --junitxml=pytest.xml

    - name: Coverage report
      run: python -m coverage report

    - name: Publish coverage to Codecov
      if: ${{ always() }}
      uses: codecov/codecov-action@v1.2.1
      with:
        fail_ci_if_error: true
        files: coverage.xml
        flags: ${{ matrix.os }},python${{ matrix.python-version }}

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: pytest-${{ matrix.os }}-${{ matrix.python-version }}
        path: pytest.xml
