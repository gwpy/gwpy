# ---------------------------
#
# Run tests that check integration with the dependencies, either
#
# minimal:
#   check that the minimum version pins actually work
#
# experimental:
#   check compatibility with the latest pre-releases of
#   as much stuff as we can
#
# ---------------------------

name: Dependencies

on:
  push:
    branches:
      - main
      - master
      - release/**
  pull_request:
    branches:
      - main
      - master
      - release/**
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  minmax-dependencies:
    name: ${{ matrix.name }} (Python ${{ matrix.python-version }})

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Minimum"
            python-version: "3.7"
            experimental: false
            extras: "test"
            pip-opts: "--upgrade-strategy=only-if-needed"
          - name: "Experimental"
            python-version: "3.9"
            experimental: true
            extras: "test,dev"
            pip-opts: "--upgrade --upgrade-strategy=eager --pre"

    runs-on: ubuntu-latest

    steps:
    - name: Get source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Prepare minimal dependencies
      if: matrix.experimental != true
      run: |
        # replace the requirements as follows:
        #    >=X.Y.Z ---> X.Y.Z  (exact pin to minimum)
        #    ^X.Y    ---> ~X.Y    (pin to X.Y.*)
        sed -i -E \
            -e 's/>=/==/' \
            -e 's/\^/~/' \
            pyproject.toml \
            setup.cfg \
        ;
        # undo the change to python_requires
        sed -i -E \
            -e 's/python_requires = ==/python_requires = >=/' \
            setup.cfg

    - name: Install system packages for experimental dependencies
      if: matrix.experimental == true
      run: sudo apt-get -y -q install libkrb5-dev

    - name: Install GWpy and dependencies
      run: python -m pip install .[${{ matrix.extras }}] ${{ matrix.pip-opts }}

    - name: Package list
      run: python -m pip list installed

    - name: Run test suite
      id: pytest
      run: python -m pytest -ra --color yes --cov gwpy --pyargs gwpy --cov-report=xml --junitxml=pytest.xml

    - name: Coverage report
      run: python -m coverage report --show-missing

    - name: Publish coverage to Codecov
      uses: codecov/codecov-action@v1.2.1
      with:
        files: coverage.xml
        flags: ${{ runner.os }},python${{ matrix.python-version }}

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: pytest-experimental-${{ matrix.os }}-${{ matrix.python-version }}
        path: pytest.xml
