version: 2

# -- templates --------------

aliases:
  - &attach_workspace
      attach_workspace:
        at: .

  - &set_python_environment
      run:
        name: Set Python environment
        command: |
          export PYTHON_VERSION=${CIRCLE_JOB##*:}
          echo "export PYTHON_VERSION=\"${PYTHON_VERSION}\"" >> ${BASH_ENV}
          echo "Set PYTHON_VERSION=\"${PYTHON_VERSION}\""

  - &run-tests
      run:
        name: Test
        command: bash -ex ci/test.sh

  - &codecov
      run:
        name: Submit coverage to codecov
        command: bash -ex ci/codecov.sh

  - &coveralls
      run:
        name: Submit coverage to coveralls
        command: bash -ex ci/coveralls.sh

  - &store_test_results
      store_test_results:
        path: tests

  - &store_test_artifacts
      store_artifacts:
        path: tests

  - &install_minimum_requirements
      run:
        name: Install minimum requirements
        command: |
          sed 's/>=/==/g' requirements.txt > minimum-requirements.txt
          python -m pip install -r minimum-requirements.txt --upgrade-strategy=only-if-needed

  - &install
      run:
        name: Install tarball
        command: bash -ex ./ci/install.sh

  - &python-build
      docker:
        - image: python
      environment:
        USE_CONDA: false
      steps:
        - checkout
        - *attach_workspace
        - *set_python_environment
        - *install
        - *run-tests
        - *codecov
        - store_test_results:
            path: tests
        - store_artifacts:
            path: tests

  - &python-build-minimum-requirements
      docker:
        - image: python
      environment:
        USE_CONDA: false
      steps:
        - checkout
        - *attach_workspace
        - *set_python_environment
        - *install_minimum_requirements
        - *install
        - *run-tests
        - *codecov
        - store_test_results:
            path: tests
        - store_artifacts:
            path: tests

  - &conda-build
      docker:
        - image: continuumio/miniconda3
      steps:
        - checkout
        - *attach_workspace
        - restore_cache:
            key: v7-gwpy-{{ .Environment.CIRCLE_JOB }}
        - *set_python_environment
        - run:
            name: Create conda environment
            command: |
              set -ex;
              # create conda env
              . ci/install-conda.sh;
              # activate conda env in future stages
              echo "source /opt/conda/etc/profile.d/conda.sh" >> ${BASH_ENV}
              echo "conda activate gwpyci" >> ${BASH_ENV}
        - *install
        - *run-tests
        - *codecov
        - run:
            name: Clean conda pkgs dirs
            command: conda clean --yes --quiet --tarballs
        - save_cache:
            key: v7-gwpy-{{ .Environment.CIRCLE_JOB }}
            paths:
              - "/opt/conda/pkgs"
        - *store_test_results
        - *store_test_artifacts

# -- jobs -------------------

jobs:
  sdist:
    docker:
      - image: python
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            set -ex
            python -m pip install "setuptools>=20.2.0" "wheel"
      - run:
          name: Build tarball
          command: python setup.py --quiet sdist --dist-dir . bdist_wheel --universal --dist-dir .
      - persist_to_workspace:
          root: .
          paths:
            - gwpy-*.tar.*
            - gwpy-*-none-any.whl

  flake8:
    docker:
      - image: python
    steps:
      - checkout
      - run:
          name: Lint
          command: |
            set -ex
            python -m pip install "flake8>=3.7.0"
            mkdir -p tests
            python -m flake8 --output-file tests/flake8.txt
      - run:
          name: Create flake8 report
          when: always
          command: |
            set -ex
            python -m pip install flake8-junit-report
            python -m junit_conversor tests/flake8.txt tests/junit.xml
      - *store_test_results
      - *store_test_artifacts

  # -- python ---------------

  python:3.6:
    <<: *python-build
    docker:
      - image: python:3.6

  python:3.7:
    <<: *python-build
    docker:
      - image: python:3.7

  python:3.8:
    <<: *python-build
    docker:
      - image: python:3.8

  python:minreq:3.6:
    <<: *python-build-minimum-requirements
    docker:
      - image: python:3.6

  # -- conda ----------------

  conda:3.6:
    <<: *conda-build

  conda:3.7:
    <<: *conda-build

  conda:3.8:
    <<: *conda-build

# -- workflow ---------------

workflows:
  version: 2
  build-and-test:
    jobs:
      - sdist
      - flake8

      # basic tests with minimal dependencies
      - python:3.6:
          requires:
            - sdist
      - python:3.7:
          requires:
            - sdist
      - python:3.8:
          requires:
            - sdist
      - python:minreq:3.6:
          requires:
            - sdist

      # conda tests
      - conda:3.6:
          requires:
            - python:3.6
      - conda:3.7:
          requires:
            - python:3.7
      - conda:3.8:
          requires:
            - python:3.8
