language: python

sudo: false

env:
  global:
    - PIP_FLAGS="--quiet"
    - secure: KXq3Kn+i5pDl7ApqYkMKAZlxC7OOLDmiBn46t/JYKyRAchacp1PR84vrwTNj7OfhZek0tlTkKwQtwpFaw6llhYSpB9xl9SsPNmoYsBtZb9zC8z/oRXlXgYudesPSt7cltlt0K21pV9gRflOezRjlJRDoccbw3pe90vYpMdvr7+0=

matrix:
  include:
    # -- simple builds --------------------------

    - python: '2.7'
      addons:
        apt:
          packages:
            - gcc
            - gfortran
            - libblas-dev
            - liblapack-dev
            - texlive-latex-extra
            - texlive-fonts-recommended
            - dvipng
            - libhdf5-serial-dev
    - python: '3.4'
      addons:
        apt:
          packages:
            - gcc
            - gfortran
            - libblas-dev
            - liblapack-dev
            - texlive-latex-extra
            - texlive-fonts-recommended
            - dvipng
            - libhdf5-serial-dev
    - python: '3.5'
      addons:
        apt:
          packages:
            - gcc
            - gfortran
            - libblas-dev
            - liblapack-dev
            - texlive-latex-extra
            - texlive-fonts-recommended
            - dvipng
            - libhdf5-serial-dev
    - python: '3.6'
      addons:
        apt:
          packages:
            - gcc
            - gfortran
            - libblas-dev
            - liblapack-dev
            - texlive-latex-extra
            - texlive-fonts-recommended
            - dvipng
            - libhdf5-serial-dev

    - env: PIP_FLAGS="--upgrade --pre --quiet"
      python: '3.6'
      addons:
        apt:
          packages:
            - gcc
            - gfortran
            - libblas-dev
            - liblapack-dev
            - texlive-latex-extra
            - texlive-fonts-recommended
            - dvipng
            - libhdf5-serial-dev

    # -- reference OS builds --------------------

    # EL7
    - env: DOCKER_IMAGE="ligo/base:el7"
      python: '2.7'
      sudo: required
      services:
        - docker
    - env: DOCKER_IMAGE="ligo/base:el7"
      python: '3.4'
      sudo: required
      services:
        - docker

    # debian 8
    - env: DOCKER_IMAGE="ligo/base:jessie"
      python: '2.7'
      sudo: required
      services:
        - docker
    - env: DOCKER_IMAGE="ligo/base:jessie"
      python: '3.4'
      sudo: required
      services:
        - docker

    # debian 9
    - env: DOCKER_IMAGE="ligo/base:stretch"
      python: '2.7'
      sudo: required
      services:
        - docker
    - env: DOCKER_IMAGE="ligo/base:stretch"
      python: '3.5'
      sudo: required
      services:
        - docker

    # macOS
    - os: osx
      osx_image: xcode9.2
      language: minimal
      python: '2.7'
      env: PYTHON_VERSION='2.7'
      sudo: required

    # macOS
    - os: osx
      osx_image: xcode9.2
      language: minimal
      python: '3.6'
      env: PYTHON_VERSION='3.6'
      sudo: required

    # -- full build -----------------------------

    - env: DOCKER_IMAGE="ligo/base:stretch" EXTRAS=true
      python: '2.7'
      sudo: required
      services:
        - docker
    - env: DOCKER_IMAGE="ligo/base:stretch" EXTRAS=true
      python: '3.5'
      sudo: required
      services:
        - docker

  allow_failures:
    - env: PIP_FLAGS="--upgrade --pre --quiet"
    - env: DOCKER_IMAGE="ligo/base:el7"
      python: '3.4'
    - env: DOCKER_IMAGE="ligo/base:jessie"
      python: '3.4'
    - env: DOCKER_IMAGE="ligo/base:stretch" EXTRAS=true
      python: '3.5'

  fast_finish: true

before_install:
  # force unshallow clone (for full history)
  - git fetch --unshallow

  # set up utilities
  - . ./ci/lib.sh

  # configure docker and system dependencies
  - . ./ci/docker-install.sh

install:  # install package
  - ci_run ". ${GWPY_PATH}/ci/install.sh"

script:  # run tests
  - ci_run ". ${GWPY_PATH}/ci/test.sh"

after_success:
  # submit coverage results
  - sed -i 's|"'${GWPY_PATH}'|"'`pwd`'|g' .coverage
  - coveralls

  # build and deploy package files
  - . ./ci/deploy.sh

before_deploy:
  # manual clean up of repository
  - ci_run "cd ${GWPY_PATH} && git clean -dfX"

deploy:
  - provider: pypi
    user: duncanmmacleod
    password: ${PYPI_PASSWD}
    distributions: sdist bdist_wheel
    on:
      condition: -z "${DOCKER_IMAGE}"
      branch: master
      tags: true
      python: '2.7'
      repo: gwpy/gwpy

notifications:
  slack:
    secure: jQdoSpwNbUnq0Eo7o6Ko7vuhu58LQdfy8jFKxLUnUjv/GLezK/PPAQCU9SgmyDPh1yD8sb5Xa8UtbNfGtpYdwBAGwZxPHz3oQQAflivFwcF6UP7/NlAB9muSOOnL0QfQyX1I4sIKOkX+gkl+TBciX4v58B8NUU02dDkwDqTLUqQ=

cache:
  apt: true
  pip: true
  ccache: true
  directories:
    - /opt/local/var/macports/software
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log
